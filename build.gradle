buildscript {
    ext {
        ext.externalSettings = new Properties()
        externalSettings.load(new FileInputStream("config/application.properties"))
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.sun.activation:javax.activation:1.2.0'
        classpath 'org.glassfish.jaxb:jaxb-runtime:2.3.1'
        classpath 'org.postgresql:postgresql:42.2.5'
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.1.3.RELEASE'
        classpath 'com.moowork.gradle:gradle-node-plugin:1.3.1'
    }
}

plugins {
    id 'org.springframework.boot' version '2.1.3.RELEASE'
    id 'org.flywaydb.flyway' version '5.2.4'
    id 'nu.studer.jooq' version '3.0.3'
    id 'net.ltgt.apt' version '0.21'
    id 'java'
}

apply plugin: 'idea'
apply plugin: 'io.spring.dependency-management'
apply plugin: "com.moowork.node"

group = 'ch.fhnw.wodss'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
    maven {
        url 'https://repo.spring.io/snapshot'
    }
    maven {
        url 'https://repo.spring.io/milestone'
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-jooq'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'junit', module: 'junit'
    }
    runtimeOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql:42.2.5'
    jooqRuntime 'org.postgresql:postgresql:42.2.5'
    jooqRuntime group: 'org.jooq', name: 'jooq-meta-extensions:3.11.10'
    compile 'org.flywaydb:flyway-core:5.2.4'
    compile 'io.springfox:springfox-swagger2:2.9.2'
    compile 'io.springfox:springfox-swagger-ui:2.9.2'
    compile 'io.jsonwebtoken:jjwt:0.9.1'
    compile 'org.mapstruct:mapstruct:1.3.0.Final'
    compile 'org.mapstruct:mapstruct-processor:1.3.0.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.3.0.Final'
    testAnnotationProcessor 'org.mapstruct:mapstruct-processor:1.3.0.Final'
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testCompile 'org.junit.jupiter:junit-jupiter-params:5.3.1'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    testCompile group: 'org.mockito', name: 'mockito-junit-jupiter', version: '2.23.4'
}

test {
    useJUnitPlatform()
}

bootJar {
    archiveName = 'fhnwwodss.jar'
}

flyway {
    url = externalSettings['JDBC_DATABASE_URL']
    user = externalSettings['JDBC_DATABASE_USER']
    password = externalSettings['JDBC_DATABASE_PASSWORD']
}

jooq {
    version = '3.11.10'
    edition = 'OSS'
    application(sourceSets.main) {
        jdbc {
            driver = 'org.postgresql.Driver'
            url = externalSettings['JDBC_DATABASE_URL']
            user = externalSettings['JDBC_DATABASE_USER']
            password = externalSettings['JDBC_DATABASE_PASSWORD']
        }
        generator {
            database {
                name = 'org.jooq.meta.postgres.PostgresDatabase'
                inputSchema = 'public'
            }
            generate {
                relations = true
                deprecated = false
                records = true
            }
        }
    }
}

node {
    version = '10.15.3'
    npmVersion = '6.4.1'
    download = true
    nodeModulesDir = file("src/main/javascript")
}

task buildFrontend(type: NpmTask) {
    args = ['run', 'build']
}

task downloadDependencies(type: Exec) {
    configurations.testRuntime.files
    commandLine 'echo', 'Downloaded all dependencies'
}

buildFrontend.dependsOn(npm_install)
compileJava.dependsOn(buildFrontend)
